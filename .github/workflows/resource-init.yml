name: Terraform CD

on:
  workflow_dispatch:  # Enables manual execution only

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          # Remove aws-session-token if not needed
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN || '' }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.9

      # Initialize Terraform
      - name: Terraform Init
        working-directory: ./setup/terraform  # Adjust path if needed
        run: terraform init

      # Terraform Plan with Conditional Creation
      - name: Terraform Plan
        working-directory: ./setup/terraform  # Adjust path if needed
        env:
          TF_VAR_region: ${{ secrets.AWS_REGION }}
        run: |
          terraform plan -out=tfplan

      # Check if there are changes to apply
      - name: Check for Terraform Changes
        id: tf_changes
        working-directory: ./setup/terraform  # Adjust path if needed
        run: |
          terraform show -json tfplan > tfplan.json
          CHANGES=$(jq '.resource_changes | length' tfplan.json)
          echo "::set-output name=changes::$CHANGES"

      # Terraform Apply if there are changes
      - name: Terraform Apply
        if: steps.tf_changes.outputs.changes != '0'
        working-directory: ./setup/terraform  # Adjust path if needed
        env:
          TF_VAR_region: ${{ secrets.AWS_REGION }}
        run: terraform apply -auto-approve tfplan
